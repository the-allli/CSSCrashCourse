* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

.container {
    height: 320px;
    border: 20px solid rgb(115, 236, 16);
}

.block {
    background-color: red;
    width: 100%;
    height: 100px;
    padding: 20px;
    margin: 20px auto;
    text-align: center;
}

.inline {
    background-color: yellow;
    display: inline;
    /* width: 100%; */
    /* height: 100px; */
    padding-left: 20px;
    padding-right: 20px;
    padding-top: 20px;
    padding-bottom: 20px;
    /* margin-top: 20px; */
    /* margin-bottom: 20px; */
    margin-left: 20px;
    margin-right: 20px;
}

.inline-block {
    background-color: green;
    display: inline-block;
    width: 200px;
    height: 100px;
    padding: 20px;
    margin: 20px auto;
}


.flex {
    height: 100vh;
    border: 20px solid rgb(236, 49, 16);
    display: flex;
    width: 50%;
    /* flex-direction: ; */
    /* flex-wrap: ; */
    /* flex-grow: ; */
    /* flex-shrink: ; */
    /* flex-basis: ; */
    /* flex-flow: ; */
    /* justify-content: ; */
    /* justify-items: ; */
    /* justify-self: ; */
    /* align-items: ; */
    /* align-self: ; */
    /* align-content: ; */
    /* order: ; */
}

.child1 {
    width: 150px;
    height: 100px;
    background-color: aqua;
}

.child2 {
    width: 150px;
    height: 100px;
    background-color: blue;
}

.child3 {
    width: 150px;
    height: 100px;
    background-color: blueviolet;
}

.child4 {
    width: 150px;
    height: 100px;
    background-color: rgb(130, 114, 145);
}

.child5 {
    width: 150px;
    height: 100px;
    background-color: rgb(182, 153, 23);
}

.flex-img {
    object-fit: fill;
    width: 100%;
    height: 100%;
}

.grid-img {
    object-fit: fill;
    width: 100%;
    height: 100%;
}

.grid {
    padding: 20px;
    height: 100vh;
    border: 20px solid rgb(9, 124, 145);
    display: grid;
    /* Defining Columns and Rows */
    /* You can use:
        px, %, fr (fractional unit) 
        auto (content-based) 
        repeat(n, size) shorthand  */
    /* grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr); */
    /* You can also use named grid lines */
    grid-template-columns: repeat(3, [col-start] 1fr [col-end]);
    grid-template-rows: repeat(2, [row-start] 1fr [row-end]);
    /* gap between rows and columns */
    /* grid-row-gap: 20px;
    grid-column-gap: 20px; */
    grid-gap: 20px;
    /* Naming Grid Areas */
    grid-template-areas:
        "grid-item1 grid-item2 grid-item3"
        "grid-item4 grid-item5 grid-item5";
}

.grid-item1 {
    background-color: rgb(255, 0, 0);
    /* Grid Item Positioning */
    /* grid-column-start: 1;
    grid-column-end: 3; */
    /* grid-column: 1 / 3; */
    /* Start at column 1, end before column 2 */
    /* grid-row-start: 1;
    grid-row-end: 3; */
    /* grid-row: 1 / 3; */
    /* Start at row 1, end before row 2 */
    /* grid-area: 1/1/3/3; */
    /* Start at row 1, column 1, end before row 3, column 3 */
}

.grid-item2 {
    background-color: rgb(0, 255, 0);
    /* Spaning Grid Item */
    /* This item will span 2 rows */
    /* grid-row: span 2; */
    /* This item will span 2 columns */
    /* grid-column: span 2; */
}

.grid-item3 {
    background-color: rgb(0, 0, 255);
    /* grid-column: 3;
    grid-row: 2; */
    /* OR */
    /* grid-column: col-start 3 / col-end 3;
    grid-row: row-start 2 / row-end 2; */
}

.grid-item4 {
    background-color: rgb(255, 255, 0);
}

.grid-item5 {
    background-color: rgb(0, 255, 255);
}